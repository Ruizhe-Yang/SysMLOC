/*
 * generated by Xtext 2.38.0
 */
grammar InternalSysMLOC;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package dut.control.sysmloc.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package dut.control.sysmloc.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import dut.control.sysmloc.services.SysMLOCGrammarAccess;

}
@parser::members {
	private SysMLOCGrammarAccess grammarAccess;

	public void setGrammarAccess(SysMLOCGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleNamespace
entryRuleNamespace
:
{ before(grammarAccess.getNamespaceRule()); }
	 ruleNamespace
{ after(grammarAccess.getNamespaceRule()); } 
	 EOF 
;

// Rule Namespace
ruleNamespace 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamespaceAccess().getPackagesAssignment()); }
		(rule__Namespace__PackagesAssignment)*
		{ after(grammarAccess.getNamespaceAccess().getPackagesAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackage
entryRulePackage
:
{ before(grammarAccess.getPackageRule()); }
	 rulePackage
{ after(grammarAccess.getPackageRule()); } 
	 EOF 
;

// Rule Package
rulePackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageAccess().getGroup()); }
		(rule__Package__Group__0)
		{ after(grammarAccess.getPackageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBaseElement
entryRuleBaseElement
:
{ before(grammarAccess.getBaseElementRule()); }
	 ruleBaseElement
{ after(grammarAccess.getBaseElementRule()); } 
	 EOF 
;

// Rule BaseElement
ruleBaseElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBaseElementAccess().getAlternatives()); }
		(rule__BaseElement__Alternatives)
		{ after(grammarAccess.getBaseElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnotatingElement
entryRuleAnnotatingElement
:
{ before(grammarAccess.getAnnotatingElementRule()); }
	 ruleAnnotatingElement
{ after(grammarAccess.getAnnotatingElementRule()); } 
	 EOF 
;

// Rule AnnotatingElement
ruleAnnotatingElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnotatingElementAccess().getCommentParserRuleCall()); }
		ruleComment
		{ after(grammarAccess.getAnnotatingElementAccess().getCommentParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportElement
entryRuleImportElement
:
{ before(grammarAccess.getImportElementRule()); }
	 ruleImportElement
{ after(grammarAccess.getImportElementRule()); } 
	 EOF 
;

// Rule ImportElement
ruleImportElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportElementAccess().getNamespaceImportParserRuleCall()); }
		ruleNamespaceImport
		{ after(grammarAccess.getImportElementAccess().getNamespaceImportParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinitionElement
entryRuleDefinitionElement
:
{ before(grammarAccess.getDefinitionElementRule()); }
	 ruleDefinitionElement
{ after(grammarAccess.getDefinitionElementRule()); } 
	 EOF 
;

// Rule DefinitionElement
ruleDefinitionElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionElementAccess().getAlternatives()); }
		(rule__DefinitionElement__Alternatives)
		{ after(grammarAccess.getDefinitionElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUsageElement
entryRuleUsageElement
:
{ before(grammarAccess.getUsageElementRule()); }
	 ruleUsageElement
{ after(grammarAccess.getUsageElementRule()); } 
	 EOF 
;

// Rule UsageElement
ruleUsageElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUsageElementAccess().getNonOccurrenceUsageElementParserRuleCall()); }
		ruleNonOccurrenceUsageElement
		{ after(grammarAccess.getUsageElementAccess().getNonOccurrenceUsageElementParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNonOccurrenceUsageElement
entryRuleNonOccurrenceUsageElement
:
{ before(grammarAccess.getNonOccurrenceUsageElementRule()); }
	 ruleNonOccurrenceUsageElement
{ after(grammarAccess.getNonOccurrenceUsageElementRule()); } 
	 EOF 
;

// Rule NonOccurrenceUsageElement
ruleNonOccurrenceUsageElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNonOccurrenceUsageElementAccess().getAttributeUsageParserRuleCall()); }
		ruleAttributeUsage
		{ after(grammarAccess.getNonOccurrenceUsageElementAccess().getAttributeUsageParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamespaceImport
entryRuleNamespaceImport
:
{ before(grammarAccess.getNamespaceImportRule()); }
	 ruleNamespaceImport
{ after(grammarAccess.getNamespaceImportRule()); } 
	 EOF 
;

// Rule NamespaceImport
ruleNamespaceImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamespaceImportAccess().getGroup()); }
		(rule__NamespaceImport__Group__0)
		{ after(grammarAccess.getNamespaceImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComment
entryRuleComment
:
{ before(grammarAccess.getCommentRule()); }
	 ruleComment
{ after(grammarAccess.getCommentRule()); } 
	 EOF 
;

// Rule Comment
ruleComment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommentAccess().getGroup()); }
		(rule__Comment__Group__0)
		{ after(grammarAccess.getCommentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeDefinition
entryRuleAttributeDefinition
:
{ before(grammarAccess.getAttributeDefinitionRule()); }
	 ruleAttributeDefinition
{ after(grammarAccess.getAttributeDefinitionRule()); } 
	 EOF 
;

// Rule AttributeDefinition
ruleAttributeDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getGroup()); }
		(rule__AttributeDefinition__Group__0)
		{ after(grammarAccess.getAttributeDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePartDefinition
entryRulePartDefinition
:
{ before(grammarAccess.getPartDefinitionRule()); }
	 rulePartDefinition
{ after(grammarAccess.getPartDefinitionRule()); } 
	 EOF 
;

// Rule PartDefinition
rulePartDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPartDefinitionAccess().getGroup()); }
		(rule__PartDefinition__Group__0)
		{ after(grammarAccess.getPartDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeUsage
entryRuleAttributeUsage
:
{ before(grammarAccess.getAttributeUsageRule()); }
	 ruleAttributeUsage
{ after(grammarAccess.getAttributeUsageRule()); } 
	 EOF 
;

// Rule AttributeUsage
ruleAttributeUsage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeUsageAccess().getGroup()); }
		(rule__AttributeUsage__Group__0)
		{ after(grammarAccess.getAttributeUsageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTBD
entryRuleTBD
:
{ before(grammarAccess.getTBDRule()); }
	 ruleTBD
{ after(grammarAccess.getTBDRule()); } 
	 EOF 
;

// Rule TBD
ruleTBD 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTBDAccess().getGroup()); }
		(rule__TBD__Group__0)
		{ after(grammarAccess.getTBDAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleName
entryRuleName
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameAccess().getAlternatives()); }
		(rule__Name__Alternatives)
		{ after(grammarAccess.getNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualification
entryRuleQualification
:
{ before(grammarAccess.getQualificationRule()); }
	 ruleQualification
{ after(grammarAccess.getQualificationRule()); } 
	 EOF 
;

// Rule Qualification
ruleQualification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getQualificationAccess().getGroup()); }
			(rule__Qualification__Group__0)
			{ after(grammarAccess.getQualificationAccess().getGroup()); }
		)
		(
			{ before(grammarAccess.getQualificationAccess().getGroup()); }
			(rule__Qualification__Group__0)*
			{ after(grammarAccess.getQualificationAccess().getGroup()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBaseElementAccess().getPackageParserRuleCall_0()); }
		rulePackage
		{ after(grammarAccess.getBaseElementAccess().getPackageParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBaseElementAccess().getAnnotatingElementParserRuleCall_1()); }
		ruleAnnotatingElement
		{ after(grammarAccess.getBaseElementAccess().getAnnotatingElementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBaseElementAccess().getImportElementParserRuleCall_2()); }
		ruleImportElement
		{ after(grammarAccess.getBaseElementAccess().getImportElementParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getBaseElementAccess().getDefinitionElementParserRuleCall_3()); }
		ruleDefinitionElement
		{ after(grammarAccess.getBaseElementAccess().getDefinitionElementParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getBaseElementAccess().getUsageElementParserRuleCall_4()); }
		ruleUsageElement
		{ after(grammarAccess.getBaseElementAccess().getUsageElementParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getBaseElementAccess().getTBDParserRuleCall_5()); }
		ruleTBD
		{ after(grammarAccess.getBaseElementAccess().getTBDParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DefinitionElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionElementAccess().getAttributeDefinitionParserRuleCall_0()); }
		ruleAttributeDefinition
		{ after(grammarAccess.getDefinitionElementAccess().getAttributeDefinitionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionElementAccess().getPartDefinitionParserRuleCall_1()); }
		rulePartDefinition
		{ after(grammarAccess.getDefinitionElementAccess().getPartDefinitionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getSemicolonKeyword_3_0()); }
		';'
		{ after(grammarAccess.getAttributeDefinitionAccess().getSemicolonKeyword_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getGroup_3_1()); }
		(rule__AttributeDefinition__Group_3_1__0)
		{ after(grammarAccess.getAttributeDefinitionAccess().getGroup_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartDefinition__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartDefinitionAccess().getSemicolonKeyword_4_0()); }
		';'
		{ after(grammarAccess.getPartDefinitionAccess().getSemicolonKeyword_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getPartDefinitionAccess().getGroup_4_1()); }
		(rule__PartDefinition__Group_4_1__0)
		{ after(grammarAccess.getPartDefinitionAccess().getGroup_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeUsage__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeUsageAccess().getSemicolonKeyword_2_0()); }
		';'
		{ after(grammarAccess.getAttributeUsageAccess().getSemicolonKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeUsageAccess().getGroup_2_1()); }
		(rule__AttributeUsage__Group_2_1__0)
		{ after(grammarAccess.getAttributeUsageAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TBD__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTBDAccess().getSemicolonKeyword_1_0()); }
		';'
		{ after(grammarAccess.getTBDAccess().getSemicolonKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTBDAccess().getGroup_1_1()); }
		(rule__TBD__Group_1_1__0)
		{ after(grammarAccess.getTBDAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getNameAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNameAccess().getUNRESTRICTED_NAMETerminalRuleCall_1()); }
		RULE_UNRESTRICTED_NAME
		{ after(grammarAccess.getNameAccess().getUNRESTRICTED_NAMETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__0__Impl
	rule__Package__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getPackageKeyword_0()); }
	'package'
	{ after(grammarAccess.getPackageAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__1__Impl
	rule__Package__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getDeclaredNameAssignment_1()); }
	(rule__Package__DeclaredNameAssignment_1)
	{ after(grammarAccess.getPackageAccess().getDeclaredNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__2__Impl
	rule__Package__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__3__Impl
	rule__Package__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getElementsAssignment_3()); }
	(rule__Package__ElementsAssignment_3)*
	{ after(grammarAccess.getPackageAccess().getElementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Package__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceImport__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamespaceImport__Group__0__Impl
	rule__NamespaceImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceImport__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamespaceImportAccess().getVisibilityAssignment_0()); }
	(rule__NamespaceImport__VisibilityAssignment_0)
	{ after(grammarAccess.getNamespaceImportAccess().getVisibilityAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceImport__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamespaceImport__Group__1__Impl
	rule__NamespaceImport__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceImport__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamespaceImportAccess().getImportKeyword_1()); }
	'import'
	{ after(grammarAccess.getNamespaceImportAccess().getImportKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceImport__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamespaceImport__Group__2__Impl
	rule__NamespaceImport__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceImport__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamespaceImportAccess().getDeclaredNameAssignment_2()); }
	(rule__NamespaceImport__DeclaredNameAssignment_2)
	{ after(grammarAccess.getNamespaceImportAccess().getDeclaredNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceImport__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamespaceImport__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceImport__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamespaceImportAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getNamespaceImportAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Comment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group__0__Impl
	rule__Comment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getDocKeyword_0()); }
	'doc'
	{ after(grammarAccess.getCommentAccess().getDocKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Comment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommentAccess().getBodyAssignment_1()); }
	(rule__Comment__BodyAssignment_1)
	{ after(grammarAccess.getCommentAccess().getBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__0__Impl
	rule__AttributeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getAttributeKeyword_0()); }
	'attribute'
	{ after(grammarAccess.getAttributeDefinitionAccess().getAttributeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__1__Impl
	rule__AttributeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getDefKeyword_1()); }
	'def'
	{ after(grammarAccess.getAttributeDefinitionAccess().getDefKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__2__Impl
	rule__AttributeDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getDeclaredNameAssignment_2()); }
	(rule__AttributeDefinition__DeclaredNameAssignment_2)
	{ after(grammarAccess.getAttributeDefinitionAccess().getDeclaredNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getAlternatives_3()); }
	(rule__AttributeDefinition__Alternatives_3)
	{ after(grammarAccess.getAttributeDefinitionAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDefinition__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group_3_1__0__Impl
	rule__AttributeDefinition__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getLeftCurlyBracketKeyword_3_1_0()); }
	'{'
	{ after(grammarAccess.getAttributeDefinitionAccess().getLeftCurlyBracketKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group_3_1__1__Impl
	rule__AttributeDefinition__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getElementsAssignment_3_1_1()); }
	(rule__AttributeDefinition__ElementsAssignment_3_1_1)*
	{ after(grammarAccess.getAttributeDefinitionAccess().getElementsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_3_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeDefinition__Group_3_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group_3_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeDefinitionAccess().getRightCurlyBracketKeyword_3_1_2()); }
	'}'
	{ after(grammarAccess.getAttributeDefinitionAccess().getRightCurlyBracketKeyword_3_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PartDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartDefinition__Group__0__Impl
	rule__PartDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PartDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartDefinitionAccess().getPartKeyword_0()); }
	'part'
	{ after(grammarAccess.getPartDefinitionAccess().getPartKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartDefinition__Group__1__Impl
	rule__PartDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PartDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartDefinitionAccess().getDefKeyword_1()); }
	'def'
	{ after(grammarAccess.getPartDefinitionAccess().getDefKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartDefinition__Group__2__Impl
	rule__PartDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PartDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartDefinitionAccess().getDeclaredNameAssignment_2()); }
	(rule__PartDefinition__DeclaredNameAssignment_2)
	{ after(grammarAccess.getPartDefinitionAccess().getDeclaredNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartDefinition__Group__3__Impl
	rule__PartDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PartDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartDefinitionAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getPartDefinitionAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PartDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartDefinitionAccess().getAlternatives_4()); }
	(rule__PartDefinition__Alternatives_4)
	{ after(grammarAccess.getPartDefinitionAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PartDefinition__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartDefinition__Group_4_1__0__Impl
	rule__PartDefinition__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PartDefinition__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartDefinitionAccess().getLeftCurlyBracketKeyword_4_1_0()); }
	'{'
	{ after(grammarAccess.getPartDefinitionAccess().getLeftCurlyBracketKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartDefinition__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartDefinition__Group_4_1__1__Impl
	rule__PartDefinition__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PartDefinition__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartDefinitionAccess().getElementsAssignment_4_1_1()); }
	(rule__PartDefinition__ElementsAssignment_4_1_1)*
	{ after(grammarAccess.getPartDefinitionAccess().getElementsAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartDefinition__Group_4_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartDefinition__Group_4_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PartDefinition__Group_4_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartDefinitionAccess().getRightCurlyBracketKeyword_4_1_2()); }
	'}'
	{ after(grammarAccess.getPartDefinitionAccess().getRightCurlyBracketKeyword_4_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeUsage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeUsage__Group__0__Impl
	rule__AttributeUsage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeUsage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeUsageAccess().getAttributeKeyword_0()); }
	'attribute'
	{ after(grammarAccess.getAttributeUsageAccess().getAttributeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeUsage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeUsage__Group__1__Impl
	rule__AttributeUsage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeUsage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeUsageAccess().getDeclaredNameAssignment_1()); }
	(rule__AttributeUsage__DeclaredNameAssignment_1)
	{ after(grammarAccess.getAttributeUsageAccess().getDeclaredNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeUsage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeUsage__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeUsage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeUsageAccess().getAlternatives_2()); }
	(rule__AttributeUsage__Alternatives_2)
	{ after(grammarAccess.getAttributeUsageAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeUsage__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeUsage__Group_2_1__0__Impl
	rule__AttributeUsage__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeUsage__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeUsageAccess().getLeftCurlyBracketKeyword_2_1_0()); }
	'{'
	{ after(grammarAccess.getAttributeUsageAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeUsage__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeUsage__Group_2_1__1__Impl
	rule__AttributeUsage__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeUsage__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeUsageAccess().getElementsAssignment_2_1_1()); }
	(rule__AttributeUsage__ElementsAssignment_2_1_1)*
	{ after(grammarAccess.getAttributeUsageAccess().getElementsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeUsage__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttributeUsage__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeUsage__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeUsageAccess().getRightCurlyBracketKeyword_2_1_2()); }
	'}'
	{ after(grammarAccess.getAttributeUsageAccess().getRightCurlyBracketKeyword_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TBD__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TBD__Group__0__Impl
	rule__TBD__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TBD__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTBDAccess().getTextAssignment_0()); }
	(rule__TBD__TextAssignment_0)
	{ after(grammarAccess.getTBDAccess().getTextAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TBD__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TBD__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TBD__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTBDAccess().getAlternatives_1()); }
	(rule__TBD__Alternatives_1)
	{ after(grammarAccess.getTBDAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TBD__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TBD__Group_1_1__0__Impl
	rule__TBD__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TBD__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTBDAccess().getLeftCurlyBracketKeyword_1_1_0()); }
	'{'
	{ after(grammarAccess.getTBDAccess().getLeftCurlyBracketKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TBD__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TBD__Group_1_1__1__Impl
	rule__TBD__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TBD__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTBDAccess().getElementsAssignment_1_1_1()); }
	(rule__TBD__ElementsAssignment_1_1_1)*
	{ after(grammarAccess.getTBDAccess().getElementsAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TBD__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TBD__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TBD__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTBDAccess().getRightCurlyBracketKeyword_1_1_2()); }
	'}'
	{ after(grammarAccess.getTBDAccess().getRightCurlyBracketKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Qualification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Qualification__Group__0__Impl
	rule__Qualification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualificationAccess().getNameParserRuleCall_0()); }
	ruleName
	{ after(grammarAccess.getQualificationAccess().getNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Qualification__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Qualification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualificationAccess().getColonColonKeyword_1()); }
	'::'
	{ after(grammarAccess.getQualificationAccess().getColonColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getQualificationParserRuleCall_0()); }
	(ruleQualification)?
	{ after(grammarAccess.getQualifiedNameAccess().getQualificationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getNameParserRuleCall_1()); }
	ruleName
	{ after(grammarAccess.getQualifiedNameAccess().getNameParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Namespace__PackagesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamespaceAccess().getPackagesPackageParserRuleCall_0()); }
		rulePackage
		{ after(grammarAccess.getNamespaceAccess().getPackagesPackageParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__DeclaredNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageAccess().getDeclaredNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getPackageAccess().getDeclaredNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__ElementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageAccess().getElementsBaseElementParserRuleCall_3_0()); }
		ruleBaseElement
		{ after(grammarAccess.getPackageAccess().getElementsBaseElementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceImport__VisibilityAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamespaceImportAccess().getVisibilityQualifiedNameParserRuleCall_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getNamespaceImportAccess().getVisibilityQualifiedNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceImport__DeclaredNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamespaceImportAccess().getDeclaredNameQualifiedNameParserRuleCall_2_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getNamespaceImportAccess().getDeclaredNameQualifiedNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comment__BodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommentAccess().getBodyREGULAR_COMMENTTerminalRuleCall_1_0()); }
		RULE_REGULAR_COMMENT
		{ after(grammarAccess.getCommentAccess().getBodyREGULAR_COMMENTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__DeclaredNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getDeclaredNameQualifiedNameParserRuleCall_2_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getAttributeDefinitionAccess().getDeclaredNameQualifiedNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__ElementsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeDefinitionAccess().getElementsBaseElementParserRuleCall_3_1_1_0()); }
		ruleBaseElement
		{ after(grammarAccess.getAttributeDefinitionAccess().getElementsBaseElementParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartDefinition__DeclaredNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartDefinitionAccess().getDeclaredNameQualifiedNameParserRuleCall_2_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getPartDefinitionAccess().getDeclaredNameQualifiedNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartDefinition__ElementsAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartDefinitionAccess().getElementsBaseElementParserRuleCall_4_1_1_0()); }
		ruleBaseElement
		{ after(grammarAccess.getPartDefinitionAccess().getElementsBaseElementParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeUsage__DeclaredNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeUsageAccess().getDeclaredNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getAttributeUsageAccess().getDeclaredNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeUsage__ElementsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeUsageAccess().getElementsBaseElementParserRuleCall_2_1_1_0()); }
		ruleBaseElement
		{ after(grammarAccess.getAttributeUsageAccess().getElementsBaseElementParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TBD__TextAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTBDAccess().getTextQualifiedNameParserRuleCall_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getTBDAccess().getTextQualifiedNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TBD__ElementsAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTBDAccess().getElementsBaseElementParserRuleCall_1_1_1_0()); }
		ruleBaseElement
		{ after(grammarAccess.getTBDAccess().getElementsBaseElementParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

fragment RULE_DECIMAL_VALUE : '0'..'9' ('0'..'9')*;

RULE_EXP_VALUE : RULE_DECIMAL_VALUE ('e'|'E') ('+'|'-')? RULE_DECIMAL_VALUE;

RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_UNRESTRICTED_NAME : '\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'';

RULE_STRING_VALUE : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_REGULAR_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_ML_NOTE : '//*' ( options {greedy=false;} : . )*'*/';

RULE_SL_NOTE : '//' (~(('\n'|'\r')) ~(('\n'|'\r'))*)? ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;
