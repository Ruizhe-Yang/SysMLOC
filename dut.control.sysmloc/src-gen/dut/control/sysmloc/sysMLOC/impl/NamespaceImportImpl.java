/**
 * generated by Xtext 2.38.0
 */
package dut.control.sysmloc.sysMLOC.impl;

import dut.control.sysmloc.sysMLOC.NamespaceImport;
import dut.control.sysmloc.sysMLOC.SysMLOCPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Namespace Import</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link dut.control.sysmloc.sysMLOC.impl.NamespaceImportImpl#getVisibility <em>Visibility</em>}</li>
 *   <li>{@link dut.control.sysmloc.sysMLOC.impl.NamespaceImportImpl#getDeclaredName <em>Declared Name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class NamespaceImportImpl extends ImportElementImpl implements NamespaceImport
{
  /**
   * The default value of the '{@link #getVisibility() <em>Visibility</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibility()
   * @generated
   * @ordered
   */
  protected static final String VISIBILITY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVisibility() <em>Visibility</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibility()
   * @generated
   * @ordered
   */
  protected String visibility = VISIBILITY_EDEFAULT;

  /**
   * The default value of the '{@link #getDeclaredName() <em>Declared Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeclaredName()
   * @generated
   * @ordered
   */
  protected static final String DECLARED_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDeclaredName() <em>Declared Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDeclaredName()
   * @generated
   * @ordered
   */
  protected String declaredName = DECLARED_NAME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected NamespaceImportImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SysMLOCPackage.Literals.NAMESPACE_IMPORT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVisibility()
  {
    return visibility;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVisibility(String newVisibility)
  {
    String oldVisibility = visibility;
    visibility = newVisibility;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SysMLOCPackage.NAMESPACE_IMPORT__VISIBILITY, oldVisibility, visibility));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDeclaredName()
  {
    return declaredName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDeclaredName(String newDeclaredName)
  {
    String oldDeclaredName = declaredName;
    declaredName = newDeclaredName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SysMLOCPackage.NAMESPACE_IMPORT__DECLARED_NAME, oldDeclaredName, declaredName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SysMLOCPackage.NAMESPACE_IMPORT__VISIBILITY:
        return getVisibility();
      case SysMLOCPackage.NAMESPACE_IMPORT__DECLARED_NAME:
        return getDeclaredName();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SysMLOCPackage.NAMESPACE_IMPORT__VISIBILITY:
        setVisibility((String)newValue);
        return;
      case SysMLOCPackage.NAMESPACE_IMPORT__DECLARED_NAME:
        setDeclaredName((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SysMLOCPackage.NAMESPACE_IMPORT__VISIBILITY:
        setVisibility(VISIBILITY_EDEFAULT);
        return;
      case SysMLOCPackage.NAMESPACE_IMPORT__DECLARED_NAME:
        setDeclaredName(DECLARED_NAME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SysMLOCPackage.NAMESPACE_IMPORT__VISIBILITY:
        return VISIBILITY_EDEFAULT == null ? visibility != null : !VISIBILITY_EDEFAULT.equals(visibility);
      case SysMLOCPackage.NAMESPACE_IMPORT__DECLARED_NAME:
        return DECLARED_NAME_EDEFAULT == null ? declaredName != null : !DECLARED_NAME_EDEFAULT.equals(declaredName);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (visibility: ");
    result.append(visibility);
    result.append(", declaredName: ");
    result.append(declaredName);
    result.append(')');
    return result.toString();
  }

} //NamespaceImportImpl
